steps:
  # Build the Docker image for ai-dmsp-api
  - id: docker build ai-dmsp-api
    name: "gcr.io/cloud-builders/docker"
    entrypoint: 'bash'
    args:
      [
        '-c',
        'docker build --build-arg DB_HOST=$$DB_HOST --build-arg DB_PASSWORD=$$DB_PASSWORD --build-arg DB_NAME=$$DB_NAME --build-arg DB_USER=$$DB_USER --build-arg ROLLBAR_TOKEN=$$ROLLBAR_TOKEN --build-arg JWT_SECRET=$$JWT_SECRET --build-arg JWT_EXPIRATION=$$JWT_EXPIRATION --build-arg DMPTOOL_CLIENT_ID=$$DMPTOOL_CLIENT_ID --build-arg DMPTOOL_CLIENT_SECRET=$$DMPTOOL_CLIENT_SECRET --build-arg LLM_ACCESS_SECRET=$$LLM_ACCESS_SECRET -t us-west4-docker.pkg.dev/$PROJECT_ID/ai-dmsp-api-repo/ai-dmsp-api-image:$BUILD_ID .',
      ]
    env: [
      'DOCKER_BUILDKIT=1',
      'DB_HOST=127.0.0.1',
      'DB_NAME=rtic-dev-ai-dmsp-db',
      'DB_USER=rtic-dev-ai-dmsp-user',
      'JWT_EXPIRATION=3600',
    ]
    secretEnv: [
      'DB_PASSWORD',
      'ROLLBAR_TOKEN',
      'JWT_SECRET',
      'DMPTOOL_CLIENT_ID',
      'DMPTOOL_CLIENT_SECRET',
      'LLM_ACCESS_SECRET',
    ]
    dir: 'api'

  # Push the image to GCR
  - id: docker push ai-dmsp-api
    name: "gcr.io/cloud-builders/docker"
    args: ["push", "us-west4-docker.pkg.dev/$PROJECT_ID/ai-dmsp-api-repo/ai-dmsp-api-image:$BUILD_ID"]

  # Set image tag
  - id: update Kubernetes ai-dmsp-api Container Image
    name: "gcr.io/$PROJECT_ID/kustomize:${_KUSTOMIZE_VERSION}"
    entrypoint: bash
    args:
      - "-c"
      - |
        cd /workspace/k8s-manifests/${_KUST_BUILD_DIR}
        kustomize edit set image ai-dmsp-api-image=us-west4-docker.pkg.dev/$PROJECT_ID/ai-dmsp-api-repo/ai-dmsp-api-image:$BUILD_ID
    env:
      - "APPLY=true"
      - "CLOUDSDK_COMPUTE_ZONE=${_GKE_LOCATION}"
      - "CLOUDSDK_CONTAINER_CLUSTER=${_GKE_CLUSTER}"
      - "GCLOUD_PROJECT=$PROJECT_ID"

  # Build the Docker image for ai-dmsp react
  - id: docker build ai-dmsp-react
    name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      [
        '-c',
        'docker build --build-arg NPM_TOKEN=$$NPM_TOKEN --build-arg APP_BACKEND_DOMAIN=$$APP_BACKEND_DOMAIN --build-arg APP_BACKEND_DOMAIN=$$APP_BACKEND_DOMAIN --build-arg APP_FRONTEND_AUTH=$$APP_FRONTEND_AUTH -t us-west4-docker.pkg.dev/$PROJECT_ID/ai-dmsp-react-repo/ai-dmsp-react-image:$BUILD_ID .',
      ]
    env: [
      'DOCKER_BUILDKIT=1',
      'APP_BACKEND_DOMAIN=dmsp.dev.api.rtd.asu.edu',
      'APP_BACKEND_PORT=443',
      'APP_FRONTEND_AUTH=none',
    ]
    secretEnv: ['NPM_TOKEN']
    dir: 'react'

  # Push the image to GCR
  - id: docker push ai-dmsp-react
    name: "gcr.io/cloud-builders/docker"
    args: ["push", "us-west4-docker.pkg.dev/$PROJECT_ID/ai-dmsp-react-repo/ai-dmsp-react-image:$BUILD_ID"]

  # Set image tag
  - id: update Kubernetes ai-dmsp-react Container Image
    name: "gcr.io/$PROJECT_ID/kustomize:${_KUSTOMIZE_VERSION}"
    entrypoint: bash
    args:
      - "-c"
      - |
        cd /workspace/k8s-manifests/${_KUST_BUILD_DIR}
        kustomize edit set image ai-dmsp-react-image=us-west4-docker.pkg.dev/$PROJECT_ID/ai-dmsp-react-repo/ai-dmsp-react-image:$BUILD_ID
    env:
      - "APPLY=true"
      - "CLOUDSDK_COMPUTE_ZONE=${_GKE_LOCATION}"
      - "CLOUDSDK_CONTAINER_CLUSTER=${_GKE_CLUSTER}"
      - "GCLOUD_PROJECT=$PROJECT_ID"

  # Copy secrets and SSL certificate files from secret manager
  - id: load kubernetes secrets file
    name: gcr.io/cloud-builders/gcloud
    entrypoint: "bash"
    args:
      - "-c"
      - |
        [[ -d "/workspace/k8s-manifests/${_KUST_BUILD_DIR}/secrets" ]] || mkdir /workspace/k8s-manifests/${_KUST_BUILD_DIR}/secrets
        gcloud secrets versions access latest --secret=${_SSL_CERT_SECRET_FILE} > /workspace/k8s-manifests/${_KUST_BUILD_DIR}/tls.crt
        gcloud secrets versions access latest --secret=${_SSL_KEY_SECRET_FILE} > /workspace/k8s-manifests/${_KUST_BUILD_DIR}/tls.key
        gcloud secrets versions access latest --secret=${_KUST_SECRET_FILE} > /workspace/k8s-manifests/${_KUST_BUILD_DIR}/secrets/kustomization.yaml

  # Deploy to the cluster
  - id: deploy ai-dmsp
    name: "gcr.io/$PROJECT_ID/kustomize:${_KUSTOMIZE_VERSION}"
    dir: "k8s-manifests"
    args:
      - "build"
      - "${_KUST_BUILD_DIR}"
    env:
      - "APPLY=true"
      - "CLOUDSDK_COMPUTE_ZONE=${_GKE_LOCATION}"
      - "CLOUDSDK_CONTAINER_CLUSTER=${_GKE_CLUSTER}"
      - "GCLOUD_PROJECT=$PROJECT_ID"

  # Ensure Workload Identity permissions are in place correctly
  - id: Setup workload identity permissions
    name: "gcr.io/cloud-builders/gcloud"
    entrypoint: "bash"
    args:
      - -c
      - |
        gcloud container clusters get-credentials ${_GKE_CLUSTER} --region ${_GKE_LOCATION} --project ${PROJECT_ID} && \
        ./workload-identity-setup.sh
    env:
      - "PROJECT_ID=${PROJECT_ID}"
      - "_GSA_NAME=${_GSA_NAME}"
      - "_KSA_NAME=${_KSA_NAME}"
      - "_GKE_NAMESPACE_NAME=${_GKE_NAMESPACE_NAME}"

availableSecrets:
  secretManager:
  - versionName: projects/$PROJECT_ID/secrets/dev-ai-dmsp-secret-npmrc-token/versions/latest
    env: 'NPM_TOKEN'
  - versionName: projects/$PROJECT_ID/secrets/dev-ai-dmsp-secret-db-password/versions/latest
    env: 'DB_PASSWORD'
  - versionName: projects/$PROJECT_ID/secrets/dev-ai-dmsp-secret-rollbar-token/versions/latest
    env: 'ROLLBAR_TOKEN'
  - versionName: projects/$PROJECT_ID/secrets/dev-ai-dmsp-secret-jwt-secret/versions/latest
    env: 'JWT_SECRET'
  - versionName: projects/$PROJECT_ID/secrets/dev-ai-dmsp-secret-dmptool-client-id/versions/latest
    env: 'DMPTOOL_CLIENT_ID'
  - versionName: projects/$PROJECT_ID/secrets/dev-ai-dmsp-secret-dmptool-client-secret/versions/latest
    env: 'DMPTOOL_CLIENT_SECRET'
  - versionName: projects/$PROJECT_ID/secrets/dev-ai-dmsp-secret-llm-access-secret/versions/latest
    env: 'LLM_ACCESS_SECRET'
