steps:
  # Build the Docker image for ai-dmsp-api
  - id: docker build ai-dmsp-api
    name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        "-t", "us-west4-docker.pkg.dev/$PROJECT_ID/ai-dmsp-api-repo/ai-dmsp-api-image:$BUILD_ID",
        "-t", "us-west4-docker.pkg.dev/$PROJECT_ID/ai-dmsp-api-repo/ai-dmsp-api-image:latest",
        "."
      ]
    env: ['DOCKER_BUILDKIT=1']
    dir: 'api'

  # Push the image to GCR
  - id: docker push ai-dmsp-api
    name: "gcr.io/cloud-builders/docker"
    args: ["push", "us-west4-docker.pkg.dev/$PROJECT_ID/ai-dmsp-api-repo/ai-dmsp-api-image:$BUILD_ID"]

  - id: docker push build id
    name: "gcr.io/cloud-builders/docker"
    args:
      [
        "push",
        "us-west4-docker.pkg.dev/$PROJECT_ID/ai-dmsp-api-repo/ai-dmsp-api-image:$BUILD_ID"
      ]

  - id: docker push latest
    name: "gcr.io/cloud-builders/docker"
    args:
      [
        "push",
        "us-west4-docker.pkg.dev/$PROJECT_ID/ai-dmsp-api-repo/ai-dmsp-api-image:latest"
      ]

  # Build the Docker image for ai-dmsp react
  - id: docker build ai-dmsp-react
    name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      [
        '-c',
        'docker build --build-arg NPM_TOKEN=$$NPM_TOKEN --build-arg APP_BACKEND_PORT=$$APP_BACKEND_PORT --build-arg APP_BACKEND_PROTOCOL=$$APP_BACKEND_PROTOCOL --build-arg APP_BACKEND_DOMAIN=$$APP_BACKEND_DOMAIN  --build-arg APP_BACKEND_PATH_PREFIX=$$APP_BACKEND_PATH_PREFIX --build-arg APP_FRONTEND_AUTH=$$APP_FRONTEND_AUTH --build-arg APP_FRONTEND_ENABLE_DMP_ID=$$APP_FRONTEND_ENABLE_DMP_ID -t us-west4-docker.pkg.dev/$PROJECT_ID/ai-dmsp-react-repo/ai-dmsp-react-image:$BUILD_ID .',
      ]
    env: [
      'DOCKER_BUILDKIT=1',
      'APP_BACKEND_PORT=443',
      'APP_BACKEND_PROTOCOL=https',
      'APP_BACKEND_DOMAIN=dmsp.ai.dev.rtd.asu.edu',
      'APP_BACKEND_PATH_PREFIX=api',
      'APP_FRONTEND_AUTH=local',
      'APP_FRONTEND_ENABLE_DMP_ID=false',
    ]
    secretEnv: ['NPM_TOKEN']
    dir: 'react'

  # Push the image to GCR
  - id: docker push ai-dmsp-react
    name: "gcr.io/cloud-builders/docker"
    args: ["push", "us-west4-docker.pkg.dev/$PROJECT_ID/ai-dmsp-react-repo/ai-dmsp-react-image:$BUILD_ID"]

  - id: docker push build id react
    name: "gcr.io/cloud-builders/docker"
    args:
      [
        "push",
        "us-west4-docker.pkg.dev/$PROJECT_ID/ai-dmsp-react-repo/ai-dmsp-react-image:$BUILD_ID"
      ]

  - id: docker push latest react
    name: "gcr.io/cloud-builders/docker"
    args:
      [
        "push",
        "us-west4-docker.pkg.dev/$PROJECT_ID/ai-dmsp-react-repo/ai-dmsp-react-image:latest"
      ]

  # Copy secrets and SSL certificate files from secret manager
  - id: load kubernetes secrets file
    name: gcr.io/cloud-builders/gcloud
    entrypoint: "bash"
    args:
      - "-c"
      - |
        [[ -d "/workspace/k8s-manifests/${_KUST_BUILD_DIR}/secrets" ]] || mkdir /workspace/k8s-manifests/${_KUST_BUILD_DIR}/secrets
        gcloud secrets versions access latest --secret=${_SSL_CERT_SECRET_FILE} > /workspace/k8s-manifests/${_KUST_BUILD_DIR}/tls.crt
        gcloud secrets versions access latest --secret=${_SSL_KEY_SECRET_FILE} > /workspace/k8s-manifests/${_KUST_BUILD_DIR}/tls.key
        gcloud secrets versions access latest --secret=${_KUST_SECRET_FILE} > /workspace/k8s-manifests/${_KUST_BUILD_DIR}/secrets/kustomization.yaml

  - id: deploy azalz
    name: "gcr.io/cloud-builders/kubectl"
    args:
      - "apply"
      - "-k"
      - "k8s-manifests/${_KUST_BUILD_DIR}"
    env:
      - "CLOUDSDK_COMPUTE_ZONE=${_GKE_LOCATION}"
      - "CLOUDSDK_CONTAINER_CLUSTER=${_GKE_CLUSTER}"
      - "GCLOUD_PROJECT=$PROJECT_ID"

  - id: rollout azalz
    name: "gcr.io/cloud-builders/kubectl"
    args:
      [
        "rollout",
        "restart",
        "deployment/${_ENVIRONMENT}-ai-dmsp-api-deployment",
        "-n",
        "${_ENVIRONMENT}-default"
      ]
    env:
      - "CLOUDSDK_COMPUTE_ZONE=${_GKE_LOCATION}"
      - "CLOUDSDK_CONTAINER_CLUSTER=${_GKE_CLUSTER}"
      - "GCLOUD_PROJECT=$PROJECT_ID"

  - id: rollout azalz React
    name: "gcr.io/cloud-builders/kubectl"
    args:
      [
        "rollout",
        "restart",
        "deployment/${_ENVIRONMENT}-ai-dmsp-react-deployment",
        "-n",
        "${_ENVIRONMENT}-default"
      ]
    env:
      - "CLOUDSDK_COMPUTE_ZONE=${_GKE_LOCATION}"
      - "CLOUDSDK_CONTAINER_CLUSTER=${_GKE_CLUSTER}"
      - "GCLOUD_PROJECT=$PROJECT_ID"

  # Ensure Workload Identity permissions are in place correctly
  - id: Setup workload identity permissions
    name: "gcr.io/cloud-builders/gcloud"
    entrypoint: "bash"
    args:
      - -c
      - |
        gcloud container clusters get-credentials ${_GKE_CLUSTER} --region ${_GKE_LOCATION} --project ${PROJECT_ID} && \
        ./workload-identity-setup.sh
    env:
      - "PROJECT_ID=${PROJECT_ID}"
      - "_GSA_NAME=${_GSA_NAME}"
      - "_KSA_NAME=${_KSA_NAME}"
      - "_GKE_NAMESPACE_NAME=${_GKE_NAMESPACE_NAME}"

availableSecrets:
  secretManager:
  - versionName: projects/$PROJECT_ID/secrets/dev-ai-dmsp-secret-npmrc-token/versions/latest
    env: 'NPM_TOKEN'
