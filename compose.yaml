services:
  api:
    build:
      args:
        - NODE_ENV=development
      context: api
      target: dev-envs
    command: npm run start:watch
    env_file: "./secrets/.env.backend"
    environment:
      - NODE_ENV=development
    ports:
      - 3001:3001
      - 9229:9229
      - 9230:9230
    volumes:
      - ./api/src:/code/src
      - ./api/package.json:/code/package.json
      - ./api/package-lock.json:/code/package-lock.json
    labels:
      - "traefik.enable=true" # Enable Traefik
      - "traefik.http.routers.api.rule=Host(`dmsp.local.asu.edu`) && PathPrefix(`/api`)" # Determine what URL to use
      # - "traefik.http.middlewares.api.replacepathregex.regex=^/api/(.*)"
      # - "traefik.http.middlewares.api.replacepathregex.replacement=/$$1"
      - "traefik.http.routers.api.entrypoints=websecure" # Determine what entrypoint and port to use
      - "traefik.http.routers.api.tls=true"
      - "traefik.http.services.api.loadbalancer.server.port=3001"
      - "traefik.http.middlewares.api.headers.accesscontrolallowmethods=GET,OPTIONS,POST,PUT"
      - "traefik.http.middlewares.api.headers.accesscontrolallowheaders=*"
      - "traefik.http.middlewares.api.headers.accesscontrolalloworiginlist=https://dmsp.local.asu.edu"
      - "traefik.http.middlewares.api.headers.accesscontrolmaxage=100"
      - "traefik.http.middlewares.api.headers.addvaryheader=true"
    networks:
      - proxy
      - private
    depends_on:
      - db
      - traefik

  db:
    # We use a mariadb image which supports both amd64 & arm64 architecture
    image: mariadb:10.6.4-focal
    # If you really want to use MySQL, uncomment the following line
    #image: mysql:8.0.27
    command: '--default-authentication-plugin=mysql_native_password'
    restart: always
    secrets:
      - db-password
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - private
    environment:
      - MYSQL_DATABASE=test
      - MYSQL_ROOT_PASSWORD_FILE=/run/secrets/db-password

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      - private

  react:
    build:
      context: react
      target: development
      args:
        - APP_BACKEND_DOMAIN=dmsp.local.asu.edu
        - APP_BACKEND_PATH_PREFIX=api
        - APP_BACKEND_PORT=443
        - APP_BACKEND_PROTOCOL=https
        - APP_FRONTEND_AUTH=local
        - APP_FRONTEND_ENABLE_DMP_ID=false
    ports:
      - 3000:3000
    volumes:
      - ./react/src:/code/src
      - /code/node_modules
    labels:
      - "traefik.enable=true" # Enable Traefik
      - "traefik.http.routers.react.rule=Host(`dmsp.local.asu.edu`)" # Determine what URL to use
      - "traefik.http.routers.react.entrypoints=websecure" # Determine what entrypoint and port to use
      - "traefik.http.routers.react.tls=true"
    networks:
      - proxy
    depends_on:
      - api
      - traefik

  traefik:
    image: traefik:v3.4
    container_name: traefik
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true

    ports:
      - "80:80"
      - "443:443"

    networks:
      - proxy

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./proxy:/dynamic:ro
      - ./secrets/certs:/certs:ro

    command:
      # EntryPoints
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.web.http.redirections.entrypoint.permanent=true"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websecure.http.tls=true"

      # Attach the static configuration tls.yaml file that contains the tls configuration settings
      - "--providers.file.filename=/dynamic/dynamic.yml"

      # Providers
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=proxy"

      # API & Dashboard
      - "--api.dashboard=true"
      - "--api.insecure=false"

      # Observability
      - "--log.level=INFO"
      - "--accesslog=true"
      - "--metrics.prometheus=true"

    # Traefik Dynamic configuration via Docker labels
    labels:
      # Enable selfâ€‘routing
      - "traefik.enable=true"

      # Dashboard router
      - "traefik.http.routers.dashboard.rule=Host(`traefik.local.asu.edu`)"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.tls=true"


networks:
  private:
  proxy:
    name: proxy
volumes:
  db-data:
secrets:
  db-password:
    file: secrets/db_password
